apply plugin:"maven"
apply from: "./libraries.gradle"

allprojects{
    repositories {
        // NOTE: You should declare only repositories that you need here
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        jcenter()
    }
}

buildscript {
    ext {
        spring_bootVersion = '1.4.0.RELEASE'
        spring_frameworkVersion = '4.3.2.RELEASE'
        hibernate_Version = '5.2.2.Final'
        mysql_Version = '5.1.8'
    }

    repositories {
        // NOTE: You should declare only repositories that you need here
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_bootVersion}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1"
    }
}

subprojects{ subProject ->

    defaultTasks "build"

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'spring-boot'
    apply plugin: 'war'
    apply plugin: "org.sonarqube"

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.springframework.boot:spring-boot:${spring_bootVersion}")
        compile("org.springframework.boot:spring-boot-starter:${spring_bootVersion}")
        compile("org.springframework.boot:spring-boot-actuator:${spring_bootVersion}")
        compile("org.springframework.boot:spring-boot-starter-aop:${spring_bootVersion}")
        compile("org.springframework.boot:spring-boot-starter-jdbc:${spring_bootVersion}")
        compile("org.springframework.boot:spring-boot-starter-data-jpa:${spring_bootVersion}")
        compile("org.springframework.boot:spring-boot-starter-web")
        providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

        compile("org.springframework:spring-web:${spring_frameworkVersion}")
        compile("org.springframework:spring-webmvc:${spring_frameworkVersion}")



        compile("org.hibernate:hibernate-core:${hibernate_Version}")
        compile("org.hibernate:hibernate-entitymanager:${hibernate_Version}")
        compile("org.hibernate:hibernate-validator:${hibernate_Version}")
        compile('org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final')
        compile("org.hibernate:hibernate-java8:${hibernate_Version}")
        compile("mysql:mysql-connector-java:${mysql_Version}")

        compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.6")
        compile("javax.validation:validation-api:1.1.0.Final")

        testCompile("org.springframework.boot:spring-boot-starter-test")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}